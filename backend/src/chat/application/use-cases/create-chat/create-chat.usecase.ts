import {
  CreateChatContract,
  CreateChatInput,
  CreateChatOutput,
} from './create-chat.contract';

import { IEmbeddingOpenAI } from '~_shared/domain/contracts/embedding-openai';
import { IMessageOpenAI } from '~_shared/domain/contracts/message-openai';
import { IPinecone } from '~_shared/domain/contracts/pinecone';
import { PineconeDomain } from '~_shared/domain/entities/pinecone';

export class CreateChatUsecase implements CreateChatContract {
  constructor(
    private readonly messageOpenAI: IMessageOpenAI,
    private readonly embeddingOpenAI: IEmbeddingOpenAI,
    private readonly pineconeRepository: IPinecone,
  ) {}

  async execute(input: CreateChatInput): Promise<CreateChatOutput> {
    const embedding = await this.embeddingOpenAI.execute({
      text: input.message,
    });

    const ranking = await this.pineconeRepository.findAll(embedding.embeddings);

    console.log('\nüîç Resultados do Ranking:');
    ranking.forEach((m, i) => {
      console.log(`\n[Chunk ${i + 1}] score: ${m.score}`);
      console.log(`${m.metadata.text.substring(0, 200)}...`);
    });

    const message = await this.reRank(input.message, ranking);

    return { message };
  }

  private async reRank(
    question: string,
    rankings: PineconeDomain[],
  ): Promise<string> {
    const chunks = rankings
      .map(
        (ranking, i) =>
          `Trecho ${i + 1} - Score ${ranking.score}:\n${ranking.metadata.text.trim()}`,
      )
      .join('\n\n');

    const prompt = `
      Voc√™ √© um assistente que ajuda a encontrar a melhor resposta para uma pergunta com base em trechos de texto.

      Pergunta do usu√°rio:
      "${question}"

      Aqui est√£o os trechos encontrados (com seus scores de relev√¢ncia):
      ${chunks}

      Instru√ß√µes:
      1. Escolha o trecho com o **maior score** que tamb√©m responda de forma coerente √† pergunta.
      2. Se nenhum dos trechos realmente responder √† pergunta de forma adequada, diga:
         "Nenhum dos trechos responde claramente √† pergunta."
      3. Se houver um trecho adequado, fa√ßa duas coisas:
         a) Identifique qual trecho foi escolhido (exemplo: "Trecho 1")
         b) Resuma o conte√∫do desse trecho em 2 a 3 frases, respondendo claramente √† pergunta do usu√°rio, de forma natural e sem copiar integralmente o texto.
      4. N√£o inclua o n√∫mero do trecho, nem a palavra 'Resumo:', nem nenhuma outra marca√ß√£o ‚Äî apenas o texto final resumido, pronto para ser mostrado ao usu√°rio.
    `;

    const chatResponse = await this.messageOpenAI.execute({ question: prompt });

    return chatResponse.message;
  }
}
